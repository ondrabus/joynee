AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  MyUserPool:
    Type: AWS::Cognito::UserPool

  WebSocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    Properties:
      ApiId: !Ref WebSocketApi
    DependsOn:
      - ConnectFunction
      - DisconnectFunction
      - SendMessageFunction
      - CreateConversationFunction

  WebSocketStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref WebSocketApi
      StageName: "dev"
      DeploymentId: !Ref WebSocketDeployment

  WebSocketApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: MyWebSocketChatAPI
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ConnectionsTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: connectionId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: connectionId
          KeyType: RANGE

      SSESpecification:
        SSEEnabled: true
      DeletionProtectionEnabled: true

  ChatTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: ChatTable
      BillingMode: PAY_PER_REQUEST

      AttributeDefinitions:
        # Main table keys
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S

        # GSI1 keys
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S

      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

      SSESpecification:
        SSEEnabled: true
      DeletionProtectionEnabled: true

  ConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/connect.handler
      Runtime: nodejs18.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
      Environment:
        Variables:
          CONNECTIONS_TABLE: !Ref ConnectionsTable
      Events:
        Connect:
          Type: WebSocket
          Properties:
            ApiId: !Ref WebSocketApi
            Route: "$connect"

  DisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/disconnect.handler
      Runtime: nodejs18.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
      Environment:
        Variables:
          CONNECTIONS_TABLE: !Ref ConnectionsTable
      Events:
        Disconnect:
          Type: WebSocket
          Properties:
            ApiId: !Ref WebSocketApi
            Route: "$disconnect"

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/send_message.handler
      Runtime: nodejs18.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ChatTable
      Environment:
        Variables:
          CHAT_TABLE: !Ref ChatTable
          CONNECTIONS_TABLE: !Ref ConnectionsTable
          WEBSOCKET_ENDPOINT: !Sub "https://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/"
      Events:
        SendMessage:
          Type: WebSocket
          Properties:
            ApiId: !Ref WebSocketApi
            Route: "sendMessage"

  CreateConversationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/create_conversation.handler
      Runtime: nodejs18.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ChatTable
      Environment:
        Variables:
          CHAT_TABLE: !Ref ChatTable
          CONNECTIONS_TABLE: !Ref ConnectionsTable
      Events:
        SendMessage:
          Type: WebSocket
          Properties:
            ApiId: !Ref WebSocketApi
            Route: "createConversation"
            
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "ConnectionsTable"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: connectionId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: connectionId
          KeyType: RANGE

  ChatTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "ChatTable"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

Outputs:
  WebSocketURI:
    Value: !Sub "wss://${WebSocketApi}.execute-api.${AWS::Region}.amazonaws.com/"
